{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../services/marks.service\";\nimport * as i3 from \"../../services/exam.service\";\nimport * as i4 from \"../../services/student.service\";\nimport * as i5 from \"@angular/material/snack-bar\";\nimport * as i6 from \"@angular/material/dialog\";\nimport * as i7 from \"@angular/common\";\nimport * as i8 from \"@angular/material/button\";\nimport * as i9 from \"@angular/material/form-field\";\nimport * as i10 from \"@angular/material/input\";\nfunction MarksFormComponent_mat_option_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 12);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"date\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const exam_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", exam_r1.id);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate2(\" \", exam_r1.title, \" - \", i0.ɵɵpipeBind1(2, 3, exam_r1.date), \" \");\n  }\n}\nfunction MarksFormComponent_mat_error_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Exam is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MarksFormComponent_mat_option_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 12);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const student_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", student_r2.id);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate2(\" \", student_r2.name, \" - \", student_r2.email, \" \");\n  }\n}\nfunction MarksFormComponent_mat_error_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Student is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MarksFormComponent_mat_error_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Marks is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MarksFormComponent_mat_error_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Marks cannot be negative\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MarksFormComponent_mat_error_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Total marks is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MarksFormComponent_mat_error_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Total marks must be at least 1\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport let MarksFormComponent = /*#__PURE__*/(() => {\n  class MarksFormComponent {\n    constructor(fb, marksService, examService, studentService, snackBar, dialogRef, data) {\n      this.fb = fb;\n      this.marksService = marksService;\n      this.examService = examService;\n      this.studentService = studentService;\n      this.snackBar = snackBar;\n      this.dialogRef = dialogRef;\n      this.data = data;\n      this.isEdit = false;\n      this.exams = [];\n      this.students = [];\n      this.isEdit = !!data;\n      this.marksForm = this.fb.group({\n        exam_id: [data?.exam_id || '', Validators.required],\n        student_id: [data?.student_id || '', Validators.required],\n        marks: [data?.marks || '', [Validators.required, Validators.min(0)]],\n        total_marks: [data?.total_marks || '', [Validators.required, Validators.min(1)]]\n      });\n    }\n    ngOnInit() {\n      this.loadExams();\n      this.loadStudents();\n    }\n    loadExams() {\n      this.examService.getExams(1, 1000).subscribe(exams => {\n        this.exams = exams;\n      });\n    }\n    loadStudents() {\n      this.studentService.getStudents(1, 1000).subscribe(students => {\n        this.students = students;\n      });\n    }\n    onSubmit() {\n      if (this.marksForm.valid) {\n        const marksData = this.marksForm.value;\n        this.marksService.recordMarks(marksData).subscribe({\n          next: () => {\n            this.snackBar.open('Marks recorded successfully', 'Close', {\n              duration: 3000\n            });\n            this.dialogRef.close(true);\n          },\n          error: error => {\n            this.snackBar.open('Error recording marks', 'Close', {\n              duration: 3000\n            });\n          }\n        });\n      }\n    }\n    onCancel() {\n      this.dialogRef.close();\n    }\n    static {\n      this.ɵfac = function MarksFormComponent_Factory(t) {\n        return new (t || MarksFormComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.MarksService), i0.ɵɵdirectiveInject(i3.ExamService), i0.ɵɵdirectiveInject(i4.StudentService), i0.ɵɵdirectiveInject(i5.MatSnackBar), i0.ɵɵdirectiveInject(i6.MatDialogRef), i0.ɵɵdirectiveInject(MAT_DIALOG_DATA));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: MarksFormComponent,\n        selectors: [[\"app-marks-form\"]],\n        decls: 33,\n        vars: 12,\n        consts: [[\"mat-dialog-title\", \"\"], [3, \"formGroup\"], [\"appearance\", \"outline\", 1, \"full-width\"], [\"formControlName\", \"exam_id\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [4, \"ngIf\"], [\"formControlName\", \"student_id\"], [\"matInput\", \"\", \"type\", \"number\", \"formControlName\", \"marks\"], [\"matInput\", \"\", \"type\", \"number\", \"formControlName\", \"total_marks\"], [\"align\", \"end\"], [\"mat-button\", \"\", 3, \"click\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"click\", \"disabled\"], [3, \"value\"]],\n        template: function MarksFormComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"h2\", 0);\n            i0.ɵɵtext(1);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(2, \"mat-dialog-content\")(3, \"form\", 1)(4, \"mat-form-field\", 2)(5, \"mat-label\");\n            i0.ɵɵtext(6, \"Exam\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(7, \"mat-select\", 3);\n            i0.ɵɵtemplate(8, MarksFormComponent_mat_option_8_Template, 3, 5, \"mat-option\", 4);\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(9, MarksFormComponent_mat_error_9_Template, 2, 0, \"mat-error\", 5);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(10, \"mat-form-field\", 2)(11, \"mat-label\");\n            i0.ɵɵtext(12, \"Student\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(13, \"mat-select\", 6);\n            i0.ɵɵtemplate(14, MarksFormComponent_mat_option_14_Template, 2, 3, \"mat-option\", 4);\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(15, MarksFormComponent_mat_error_15_Template, 2, 0, \"mat-error\", 5);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(16, \"mat-form-field\", 2)(17, \"mat-label\");\n            i0.ɵɵtext(18, \"Marks Obtained\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(19, \"input\", 7);\n            i0.ɵɵtemplate(20, MarksFormComponent_mat_error_20_Template, 2, 0, \"mat-error\", 5)(21, MarksFormComponent_mat_error_21_Template, 2, 0, \"mat-error\", 5);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(22, \"mat-form-field\", 2)(23, \"mat-label\");\n            i0.ɵɵtext(24, \"Total Marks\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(25, \"input\", 8);\n            i0.ɵɵtemplate(26, MarksFormComponent_mat_error_26_Template, 2, 0, \"mat-error\", 5)(27, MarksFormComponent_mat_error_27_Template, 2, 0, \"mat-error\", 5);\n            i0.ɵɵelementEnd()()();\n            i0.ɵɵelementStart(28, \"mat-dialog-actions\", 9)(29, \"button\", 10);\n            i0.ɵɵlistener(\"click\", function MarksFormComponent_Template_button_click_29_listener() {\n              return ctx.onCancel();\n            });\n            i0.ɵɵtext(30, \"Cancel\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(31, \"button\", 11);\n            i0.ɵɵlistener(\"click\", function MarksFormComponent_Template_button_click_31_listener() {\n              return ctx.onSubmit();\n            });\n            i0.ɵɵtext(32);\n            i0.ɵɵelementEnd()();\n          }\n          if (rf & 2) {\n            let tmp_3_0;\n            let tmp_5_0;\n            let tmp_6_0;\n            let tmp_7_0;\n            let tmp_8_0;\n            let tmp_9_0;\n            i0.ɵɵadvance();\n            i0.ɵɵtextInterpolate(ctx.isEdit ? \"Edit Marks\" : \"Record Marks\");\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"formGroup\", ctx.marksForm);\n            i0.ɵɵadvance(5);\n            i0.ɵɵproperty(\"ngForOf\", ctx.exams);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", (tmp_3_0 = ctx.marksForm.get(\"exam_id\")) == null ? null : tmp_3_0.hasError(\"required\"));\n            i0.ɵɵadvance(5);\n            i0.ɵɵproperty(\"ngForOf\", ctx.students);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", (tmp_5_0 = ctx.marksForm.get(\"student_id\")) == null ? null : tmp_5_0.hasError(\"required\"));\n            i0.ɵɵadvance(5);\n            i0.ɵɵproperty(\"ngIf\", (tmp_6_0 = ctx.marksForm.get(\"marks\")) == null ? null : tmp_6_0.hasError(\"required\"));\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", (tmp_7_0 = ctx.marksForm.get(\"marks\")) == null ? null : tmp_7_0.hasError(\"min\"));\n            i0.ɵɵadvance(5);\n            i0.ɵɵproperty(\"ngIf\", (tmp_8_0 = ctx.marksForm.get(\"total_marks\")) == null ? null : tmp_8_0.hasError(\"required\"));\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", (tmp_9_0 = ctx.marksForm.get(\"total_marks\")) == null ? null : tmp_9_0.hasError(\"min\"));\n            i0.ɵɵadvance(4);\n            i0.ɵɵproperty(\"disabled\", !ctx.marksForm.valid);\n            i0.ɵɵadvance();\n            i0.ɵɵtextInterpolate1(\" \", ctx.isEdit ? \"Update\" : \"Record\", \" \");\n          }\n        },\n        dependencies: [i7.NgForOf, i7.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i8.MatButton, i9.MatFormField, i9.MatLabel, i9.MatError, i10.MatInput, i6.MatDialogTitle, i6.MatDialogActions, i6.MatDialogContent, i7.DatePipe],\n        styles: [\".full-width[_ngcontent-%COMP%]{width:100%;margin-bottom:15px}\"]\n      });\n    }\n  }\n  return MarksFormComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}